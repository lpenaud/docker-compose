version: '3'

services:
  db:
    image: postgres:11-alpine
    container_name: nextcloud_pg
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-nextcloud}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:?}"
      POSTGRES_DB: "${POSTGRES_DB:-nextcloud}"
    networks:
      - dbnet

  redis:
    image: redis:7-alpine
    restart: always
    networks:
      - redisnet

  app:
    build:
      context: ./nextcloud
      dockerfile: Dockerfile
      args:
        IMAGE_VERSION: 24
    container_name: nextcloud
    restart: always
    volumes:
      - nextcloud:/var/www/html
      - ${NEXTCLOUD_DATA_DIR:-./data}:/var/www/html/data
      - ${NEXTCLOUD_SHARED_DIR:-./shared}:/shared:ro
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: "${POSTGRES_USER:-nextcloud}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:?}"
      POSTGRES_DB: "${POSTGRES_DB:-nextcloud}"
      REDIS_HOST: redis
    depends_on:
      - db
      - redis
    networks:
      - dbnet
      - redisnet
      - webnet

  web:
    build: ./web
    restart: always
    volumes:
      - nextcloud:/var/www/html:ro
    environment:
      VIRTUAL_HOST: "${LETSENCRYPT_HOST:?}"
      LETSENCRYPT_HOST: "${LETSENCRYPT_HOST:?}"
      LETSENCRYPT_EMAIL: "${LETSENCRYPT_EMAIL:?}"
    depends_on:
      - app
    networks:
      - proxy-tier
      - default
      - webnet

  proxy:
    build: ./proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-tier

  letsencrypt-companion:
    image: nginxproxy/acme-companion
    restart: always
    volumes:
      - certs:/etc/nginx/certs
      - acme:/etc/acme.sh
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy-tier
    depends_on:
      - proxy

volumes:
  db:
  nextcloud:
  certs:
  acme:
  vhost.d:
  html:

networks:
  proxy-tier:
  dbnet:
  redisnet:
  webnet:
